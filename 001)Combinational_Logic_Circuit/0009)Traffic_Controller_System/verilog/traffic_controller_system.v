// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="traffic_controller_system_traffic_controller_system,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.956000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=38,HLS_VERSION=2023_2}" *)

module traffic_controller_system (
        l_sensor,
        r_sensor,
        u_sensor,
        d_sensor,
        EW,
        NS
);


input  [0:0] l_sensor;
input  [0:0] r_sensor;
input  [0:0] u_sensor;
input  [0:0] d_sensor;
output  [0:0] EW;
output  [0:0] NS;

wire   [0:0] or_ln28_1_fu_98_p2;
wire   [0:0] or_ln28_fu_92_p2;
wire   [0:0] or_ln28_2_fu_104_p2;
wire   [0:0] and_ln16_fu_116_p2;
wire   [0:0] xor_ln16_fu_122_p2;
wire   [0:0] and_ln16_1_fu_128_p2;
wire   [0:0] or_ln22_fu_146_p2;
wire   [0:0] xor_ln22_fu_140_p2;
wire   [0:0] xor_ln22_1_fu_152_p2;
wire   [0:0] xor_ln10_fu_80_p2;
wire   [0:0] xor_ln10_1_fu_86_p2;
wire   [0:0] ew_rule_1_fu_74_p2;
wire   [0:0] ew_rule_3_fu_110_p2;
wire   [0:0] or_ln51_2_fu_170_p2;
wire   [0:0] or_ln51_fu_164_p2;
wire   [0:0] ns_rule_1_fu_134_p2;
wire   [0:0] ns_rule_2_fu_158_p2;

assign and_ln16_1_fu_128_p2 = (xor_ln16_fu_122_p2 & r_sensor);

assign and_ln16_fu_116_p2 = (l_sensor & d_sensor);

assign ew_rule_1_fu_74_p2 = (u_sensor & l_sensor);

assign ew_rule_3_fu_110_p2 = (or_ln28_2_fu_104_p2 ^ 1'd1);

assign ns_rule_1_fu_134_p2 = (u_sensor & and_ln16_1_fu_128_p2);

assign ns_rule_2_fu_158_p2 = (xor_ln22_fu_140_p2 & xor_ln22_1_fu_152_p2);

assign or_ln22_fu_146_p2 = (u_sensor | l_sensor);

assign or_ln28_1_fu_98_p2 = (u_sensor | d_sensor);

assign or_ln28_2_fu_104_p2 = (or_ln28_fu_92_p2 | or_ln28_1_fu_98_p2);

assign or_ln28_fu_92_p2 = (r_sensor | l_sensor);

assign or_ln51_2_fu_170_p2 = (ew_rule_3_fu_110_p2 | ew_rule_1_fu_74_p2);

assign or_ln51_fu_164_p2 = (xor_ln10_fu_80_p2 | xor_ln10_1_fu_86_p2);

assign xor_ln10_1_fu_86_p2 = (u_sensor ^ d_sensor);

assign xor_ln10_fu_80_p2 = (r_sensor ^ l_sensor);

assign xor_ln16_fu_122_p2 = (1'd1 ^ and_ln16_fu_116_p2);

assign xor_ln22_1_fu_152_p2 = (or_ln22_fu_146_p2 ^ 1'd1);

assign xor_ln22_fu_140_p2 = (r_sensor ^ d_sensor);

assign EW = (or_ln51_fu_164_p2 | or_ln51_2_fu_170_p2);

assign NS = (ns_rule_2_fu_158_p2 | ns_rule_1_fu_134_p2);

endmodule //traffic_controller_system
