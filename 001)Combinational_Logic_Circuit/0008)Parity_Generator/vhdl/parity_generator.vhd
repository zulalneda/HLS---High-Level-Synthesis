-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity parity_generator is
port (
    a : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of parity_generator is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "parity_generator_parity_generator,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.912000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=30,HLS_VERSION=2023_2}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_1_fu_74_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_62_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_82_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_90_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_98_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_3_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_2_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_4_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_1_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_130_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_138_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_7_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_6_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_154_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_170_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_10_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_9_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_11_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_8_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_12_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_5_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_13_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_262_p3 : STD_LOGIC_VECTOR (0 downto 0);


begin



    ap_return <= (xor_ln13_13_fu_256_p2 xor tmp_14_fu_262_p3);
    empty_fu_62_p1 <= a(1 - 1 downto 0);
    tmp_10_fu_146_p3 <= a(11 downto 11);
    tmp_11_fu_154_p3 <= a(12 downto 12);
    tmp_12_fu_162_p3 <= a(13 downto 13);
    tmp_13_fu_170_p3 <= a(14 downto 14);
    tmp_14_fu_262_p3 <= a(15 downto 15);
    tmp_1_fu_74_p3 <= a(2 downto 2);
    tmp_2_fu_82_p3 <= a(3 downto 3);
    tmp_3_fu_90_p3 <= a(4 downto 4);
    tmp_4_fu_98_p3 <= a(5 downto 5);
    tmp_5_fu_106_p3 <= a(6 downto 6);
    tmp_6_fu_114_p3 <= a(7 downto 7);
    tmp_7_fu_122_p3 <= a(8 downto 8);
    tmp_8_fu_130_p3 <= a(9 downto 9);
    tmp_9_fu_138_p3 <= a(10 downto 10);
    tmp_fu_66_p3 <= a(1 downto 1);
    xor_ln13_10_fu_238_p2 <= (tmp_13_fu_170_p3 xor tmp_12_fu_162_p3);
    xor_ln13_11_fu_244_p2 <= (xor_ln13_9_fu_232_p2 xor xor_ln13_10_fu_238_p2);
    xor_ln13_12_fu_250_p2 <= (xor_ln13_8_fu_226_p2 xor xor_ln13_11_fu_244_p2);
    xor_ln13_13_fu_256_p2 <= (xor_ln13_5_fu_208_p2 xor xor_ln13_12_fu_250_p2);
    xor_ln13_1_fu_184_p2 <= (xor_ln13_fu_178_p2 xor tmp_fu_66_p3);
    xor_ln13_2_fu_190_p2 <= (tmp_3_fu_90_p3 xor tmp_2_fu_82_p3);
    xor_ln13_3_fu_196_p2 <= (tmp_5_fu_106_p3 xor tmp_4_fu_98_p3);
    xor_ln13_4_fu_202_p2 <= (xor_ln13_3_fu_196_p2 xor xor_ln13_2_fu_190_p2);
    xor_ln13_5_fu_208_p2 <= (xor_ln13_4_fu_202_p2 xor xor_ln13_1_fu_184_p2);
    xor_ln13_6_fu_214_p2 <= (tmp_7_fu_122_p3 xor tmp_6_fu_114_p3);
    xor_ln13_7_fu_220_p2 <= (tmp_9_fu_138_p3 xor tmp_8_fu_130_p3);
    xor_ln13_8_fu_226_p2 <= (xor_ln13_7_fu_220_p2 xor xor_ln13_6_fu_214_p2);
    xor_ln13_9_fu_232_p2 <= (tmp_11_fu_154_p3 xor tmp_10_fu_146_p3);
    xor_ln13_fu_178_p2 <= (tmp_1_fu_74_p3 xor empty_fu_62_p1);
end behav;
