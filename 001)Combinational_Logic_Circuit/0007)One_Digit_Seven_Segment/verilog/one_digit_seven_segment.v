// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="one_digit_seven_segment_one_digit_seven_segment,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.922625,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=49,HLS_VERSION=2023_2}" *)

module one_digit_seven_segment (
        digit,
        code7segment,
        anodes
);


input  [7:0] digit;
output  [7:0] code7segment;
output  [7:0] anodes;

reg[7:0] code7segment;

wire   [7:0] digit_read_read_fu_72_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((~(digit_read_read_fu_72_p2 == 8'd0) & ~(digit_read_read_fu_72_p2 == 8'd1) & ~(digit_read_read_fu_72_p2 == 8'd2) & ~(digit_read_read_fu_72_p2 == 8'd3) & ~(digit_read_read_fu_72_p2 == 8'd4) & ~(digit_read_read_fu_72_p2 == 8'd5) & ~(digit_read_read_fu_72_p2 == 8'd6) & ~(digit_read_read_fu_72_p2 == 8'd7) & ~(digit_read_read_fu_72_p2 == 8'd8) & ~(digit_read_read_fu_72_p2 == 8'd9))) begin
        code7segment = 8'd255;
    end else if ((digit_read_read_fu_72_p2 == 8'd0)) begin
        code7segment = 8'd192;
    end else if ((digit_read_read_fu_72_p2 == 8'd1)) begin
        code7segment = 8'd249;
    end else if ((digit_read_read_fu_72_p2 == 8'd2)) begin
        code7segment = 8'd164;
    end else if ((digit_read_read_fu_72_p2 == 8'd3)) begin
        code7segment = 8'd176;
    end else if ((digit_read_read_fu_72_p2 == 8'd4)) begin
        code7segment = 8'd153;
    end else if ((digit_read_read_fu_72_p2 == 8'd5)) begin
        code7segment = 8'd146;
    end else if ((digit_read_read_fu_72_p2 == 8'd6)) begin
        code7segment = 8'd130;
    end else if ((digit_read_read_fu_72_p2 == 8'd7)) begin
        code7segment = 8'd248;
    end else if ((digit_read_read_fu_72_p2 == 8'd8)) begin
        code7segment = 8'd128;
    end else if ((digit_read_read_fu_72_p2 == 8'd9)) begin
        code7segment = 8'd144;
    end else begin
        code7segment = 'bx;
    end
end

assign anodes = 8'd254;

assign digit_read_read_fu_72_p2 = digit;

endmodule //one_digit_seven_segment
