-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity home_alarm_system is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    switches : IN STD_LOGIC_VECTOR (15 downto 0);
    buttons : IN STD_LOGIC_VECTOR (4 downto 0);
    leds : OUT STD_LOGIC_VECTOR (15 downto 0);
    segment_data : OUT STD_LOGIC_VECTOR (7 downto 0);
    segment_enable : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of home_alarm_system is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "home_alarm_system_home_alarm_system,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.792500,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10,HLS_SYN_LUT=245,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_86 : STD_LOGIC_VECTOR (7 downto 0) := "10000110";
    constant ap_const_lv8_B0 : STD_LOGIC_VECTOR (7 downto 0) := "10110000";
    constant ap_const_lv8_A4 : STD_LOGIC_VECTOR (7 downto 0) := "10100100";
    constant ap_const_lv8_F9 : STD_LOGIC_VECTOR (7 downto 0) := "11111001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";

    signal icmp_ln26_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_532 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal or_ln28_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_1_fu_519_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln39_1_reg_540 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_storemerge1_phi_fu_132_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal storemerge1_reg_128 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln39_fu_486_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal switch_code_fu_184_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal window_sensors_fu_154_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal motion_detectors_fu_166_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln28_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_1_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln4_2_fu_150_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln19_2_fu_162_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln4_1_fu_146_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln19_1_fu_158_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln18_fu_236_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln4_fu_142_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln23_fu_250_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_272_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln13_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln13_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_1_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_324_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln65_1_fu_286_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln18_1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_2_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_2_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_2_fu_358_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln23_fu_264_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln18_3_fu_372_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_398_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_406_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_fu_420_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln69_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln63_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln69_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_1_fu_338_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln63_1_fu_434_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_176_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln69_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_1_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_fu_454_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln63_2_fu_495_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln69_fu_380_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_3_fu_503_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln69_1_fu_511_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    storemerge1_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln28_reg_536 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln26_reg_532 = ap_const_lv1_1))) then 
                storemerge1_reg_128 <= select_ln39_1_reg_540;
            elsif ((((or_ln28_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln26_fu_194_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln26_fu_194_p2 = ap_const_lv1_0)))) then 
                storemerge1_reg_128 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln26_reg_532 <= icmp_ln26_fu_194_p2;
                or_ln28_reg_536 <= or_ln28_fu_212_p2;
                select_ln39_1_reg_540 <= select_ln39_1_fu_519_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    and_ln13_1_fu_300_p2 <= (xor_ln65_fu_294_p2 and and_ln13_fu_230_p2);
    and_ln13_fu_230_p2 <= (trunc_ln4_2_fu_150_p1 and trunc_ln19_2_fu_162_p1);
    and_ln18_1_fu_318_p2 <= (xor_ln13_fu_312_p2 and tmp_1_fu_242_p3);
    and_ln18_2_fu_352_p2 <= (xor_ln65_fu_294_p2 and or_ln18_1_fu_346_p2);
    and_ln18_fu_236_p2 <= (trunc_ln4_1_fu_146_p1 and trunc_ln19_1_fu_158_p1);
    and_ln23_fu_250_p2 <= (window_sensors_fu_154_p1 and trunc_ln4_fu_142_p1);
    and_ln39_1_fu_480_p2 <= (tmp_3_fu_390_p3 and and_ln39_fu_474_p2);
    and_ln39_fu_474_p2 <= (xor_ln69_fu_468_p2 and tmp_fu_176_p3);
    and_ln44_fu_414_p2 <= (tmp_5_fu_406_p3 and tmp_4_fu_398_p3);
    and_ln69_fu_448_p2 <= (xor_ln63_fu_442_p2 and icmp_ln69_fu_384_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_phi_mux_storemerge1_phi_fu_132_p6_assign_proc : process(icmp_ln26_reg_532, or_ln28_reg_536, select_ln39_1_reg_540, storemerge1_reg_128, ap_CS_fsm_state2)
    begin
        if (((or_ln28_reg_536 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln26_reg_532 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge1_phi_fu_132_p6 <= select_ln39_1_reg_540;
        else 
            ap_phi_mux_storemerge1_phi_fu_132_p6 <= storemerge1_reg_128;
        end if; 
    end process;

    icmp_ln26_fu_194_p2 <= "1" when (switch_code_fu_184_p4 = ap_const_lv4_B) else "0";
    icmp_ln28_1_fu_206_p2 <= "0" when (motion_detectors_fu_166_p4 = ap_const_lv2_0) else "1";
    icmp_ln28_fu_200_p2 <= "0" when (window_sensors_fu_154_p1 = ap_const_lv3_0) else "1";
    icmp_ln63_fu_218_p2 <= "1" when (buttons = ap_const_lv5_0) else "0";
    icmp_ln65_fu_224_p2 <= "1" when (window_sensors_fu_154_p1 = ap_const_lv3_0) else "0";
    icmp_ln69_fu_384_p2 <= "1" when (motion_detectors_fu_166_p4 = ap_const_lv2_0) else "0";
    leds <= switches;
    motion_detectors_fu_166_p4 <= switches(7 downto 6);
    or_ln13_fu_306_p2 <= (icmp_ln65_fu_224_p2 or and_ln13_fu_230_p2);
    or_ln18_1_fu_346_p2 <= (tmp_1_fu_242_p3 or and_ln13_fu_230_p2);
    or_ln18_2_fu_366_p2 <= (icmp_ln65_fu_224_p2 or and_ln18_2_fu_352_p2);
    or_ln18_fu_332_p2 <= (and_ln18_1_fu_318_p2 or and_ln13_1_fu_300_p2);
    or_ln28_fu_212_p2 <= (icmp_ln28_fu_200_p2 or icmp_ln28_1_fu_206_p2);
    or_ln63_fu_428_p2 <= (icmp_ln63_fu_218_p2 or and_ln44_fu_414_p2);
    or_ln65_fu_280_p2 <= (tmp_2_fu_256_p3 or icmp_ln65_fu_224_p2);
    or_ln69_fu_462_p2 <= (icmp_ln69_fu_384_p2 or icmp_ln63_fu_218_p2);

    segment_data_assign_proc : process(icmp_ln26_fu_194_p2, ap_CS_fsm_state1, or_ln28_fu_212_p2, select_ln39_fu_486_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
            if (((or_ln28_fu_212_p2 = ap_const_lv1_1) and (icmp_ln26_fu_194_p2 = ap_const_lv1_1))) then 
                segment_data <= select_ln39_fu_486_p3;
            elsif (((or_ln28_fu_212_p2 = ap_const_lv1_0) and (icmp_ln26_fu_194_p2 = ap_const_lv1_1))) then 
                segment_data <= ap_const_lv8_88;
            elsif ((icmp_ln26_fu_194_p2 = ap_const_lv1_0)) then 
                segment_data <= ap_const_lv8_C0;
            else 
                segment_data <= "XXXXXXXX";
            end if;
        else 
            segment_data <= "XXXXXXXX";
        end if; 
    end process;

        segment_enable <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_storemerge1_phi_fu_132_p6),4));

    select_ln18_1_fu_338_p3 <= 
        select_ln18_fu_324_p3 when (or_ln18_fu_332_p2(0) = '1') else 
        select_ln65_1_fu_286_p3;
    select_ln18_2_fu_358_p3 <= 
        ap_const_lv2_2 when (and_ln18_2_fu_352_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln18_3_fu_372_p3 <= 
        select_ln18_2_fu_358_p3 when (or_ln18_2_fu_366_p2(0) = '1') else 
        select_ln23_fu_264_p3;
    select_ln18_fu_324_p3 <= 
        ap_const_lv8_A4 when (and_ln18_1_fu_318_p2(0) = '1') else 
        ap_const_lv8_F9;
    select_ln23_fu_264_p3 <= 
        ap_const_lv2_2 when (tmp_2_fu_256_p3(0) = '1') else 
        ap_const_lv2_0;
    select_ln39_1_fu_519_p3 <= 
        ap_const_lv3_5 when (and_ln39_1_fu_480_p2(0) = '1') else 
        select_ln69_1_fu_511_p3;
    select_ln39_fu_486_p3 <= 
        ap_const_lv8_F9 when (and_ln39_1_fu_480_p2(0) = '1') else 
        select_ln69_fu_454_p3;
    select_ln63_1_fu_434_p3 <= 
        select_ln63_fu_420_p3 when (or_ln63_fu_428_p2(0) = '1') else 
        ap_const_lv8_86;
    select_ln63_2_fu_495_p3 <= 
        ap_const_lv3_0 when (icmp_ln63_fu_218_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln63_3_fu_503_p3 <= 
        select_ln63_2_fu_495_p3 when (or_ln63_fu_428_p2(0) = '1') else 
        ap_const_lv3_0;
    select_ln63_fu_420_p3 <= 
        ap_const_lv8_86 when (icmp_ln63_fu_218_p2(0) = '1') else 
        ap_const_lv8_A4;
    select_ln65_1_fu_286_p3 <= 
        select_ln65_fu_272_p3 when (or_ln65_fu_280_p2(0) = '1') else 
        ap_const_lv8_86;
    select_ln65_fu_272_p3 <= 
        ap_const_lv8_86 when (icmp_ln65_fu_224_p2(0) = '1') else 
        ap_const_lv8_B0;
    select_ln69_1_fu_511_p3 <= 
        sext_ln69_fu_380_p1 when (and_ln69_fu_448_p2(0) = '1') else 
        select_ln63_3_fu_503_p3;
    select_ln69_fu_454_p3 <= 
        select_ln18_1_fu_338_p3 when (and_ln69_fu_448_p2(0) = '1') else 
        select_ln63_1_fu_434_p3;
        sext_ln69_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_3_fu_372_p3),3));

    switch_code_fu_184_p4 <= switches(15 downto 12);
    tmp_1_fu_242_p3 <= and_ln18_fu_236_p2(1 downto 1);
    tmp_2_fu_256_p3 <= and_ln23_fu_250_p2(2 downto 2);
    tmp_3_fu_390_p3 <= buttons(3 downto 3);
    tmp_4_fu_398_p3 <= buttons(4 downto 4);
    tmp_5_fu_406_p3 <= switches(7 downto 7);
    tmp_fu_176_p3 <= switches(6 downto 6);
    trunc_ln19_1_fu_158_p1 <= switches(2 - 1 downto 0);
    trunc_ln19_2_fu_162_p1 <= switches(1 - 1 downto 0);
    trunc_ln4_1_fu_146_p1 <= buttons(2 - 1 downto 0);
    trunc_ln4_2_fu_150_p1 <= buttons(1 - 1 downto 0);
    trunc_ln4_fu_142_p1 <= buttons(3 - 1 downto 0);
    window_sensors_fu_154_p1 <= switches(3 - 1 downto 0);
    xor_ln13_fu_312_p2 <= (or_ln13_fu_306_p2 xor ap_const_lv1_1);
    xor_ln63_fu_442_p2 <= (icmp_ln63_fu_218_p2 xor ap_const_lv1_1);
    xor_ln65_fu_294_p2 <= (icmp_ln65_fu_224_p2 xor ap_const_lv1_1);
    xor_ln69_fu_468_p2 <= (or_ln69_fu_462_p2 xor ap_const_lv1_1);
end behav;
