-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity simple_calculator_div10 is
port (
    ap_ready : OUT STD_LOGIC;
    r_val : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of simple_calculator_div10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv13_67 : STD_LOGIC_VECTOR (12 downto 0) := "0000001100111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mul_ln7_fu_22_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln7_fu_22_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln7_fu_22_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln7_fu_22_p00 : STD_LOGIC_VECTOR (12 downto 0);

    component simple_calculator_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;



begin
    mul_6ns_8ns_13_1_1_U1 : component simple_calculator_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln7_fu_22_p0,
        din1 => mul_ln7_fu_22_p1,
        dout => mul_ln7_fu_22_p2);




    ap_ready <= ap_const_logic_1;
    ap_return <= mul_ln7_fu_22_p2(11 downto 10);
    mul_ln7_fu_22_p0 <= mul_ln7_fu_22_p00(6 - 1 downto 0);
    mul_ln7_fu_22_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_val),13));
    mul_ln7_fu_22_p1 <= ap_const_lv13_67(8 - 1 downto 0);
end behav;
