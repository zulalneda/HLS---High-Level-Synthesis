// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="vending_machine_vending_machine,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.206214,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=33,HLS_SYN_LUT=142,HLS_VERSION=2023_2}" *)

module vending_machine (
        ap_clk,
        ap_rst,
        nickel_in,
        dime_in,
        quarter_in,
        thanks_in,
        candy_out,
        nickel_out,
        dime_out
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input  [0:0] nickel_in;
input  [0:0] dime_in;
input  [0:0] quarter_in;
input  [0:0] thanks_in;
output  [0:0] candy_out;
output  [0:0] nickel_out;
output  [1:0] dime_out;

reg   [31:0] s;
wire   [31:0] s_next_load_fu_367_p1;
reg   [31:0] ap_phi_mux_s_next_1_phi_fu_150_p34;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] select_ln202_fu_378_p3;
wire   [31:0] zext_ln129_fu_403_p1;
wire   [0:0] nickel_in_read_read_fu_120_p2;
wire   [31:0] zext_ln107_fu_424_p1;
wire   [31:0] zext_ln85_fu_445_p1;
wire   [31:0] zext_ln63_fu_466_p1;
wire   [31:0] zext_ln41_fu_487_p1;
reg   [0:0] ap_phi_mux_candy_out_local_phi_fu_199_p34;
reg   [0:0] ap_phi_mux_nickel_out_local_phi_fu_256_p34;
reg   [1:0] ap_phi_mux_dime_out_local_phi_fu_313_p34;
wire   [0:0] or_ln41_fu_372_p2;
wire   [3:0] select_ln129_1_fu_387_p3;
wire   [3:0] select_ln129_fu_395_p3;
wire   [3:0] select_ln107_1_fu_408_p3;
wire   [3:0] select_ln107_fu_416_p3;
wire   [2:0] select_ln85_1_fu_429_p3;
wire   [2:0] select_ln85_fu_437_p3;
wire   [2:0] select_ln63_1_fu_450_p3;
wire   [2:0] select_ln63_fu_458_p3;
wire   [2:0] select_ln41_1_fu_471_p3;
wire   [2:0] select_ln41_fu_479_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 s = 32'd0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        s <= ap_phi_mux_s_next_1_phi_fu_150_p34;
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd9)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd8)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd7)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd6)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd5)))) begin
        ap_phi_mux_candy_out_local_phi_fu_199_p34 = 1'd1;
    end else if ((((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == 
    ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd10)))) begin
        ap_phi_mux_candy_out_local_phi_fu_199_p34 = 1'd0;
    end else begin
        ap_phi_mux_candy_out_local_phi_fu_199_p34 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd9))) begin
        ap_phi_mux_dime_out_local_phi_fu_313_p34 = 2'd3;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd8)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd7)))) begin
        ap_phi_mux_dime_out_local_phi_fu_313_p34 = 2'd1;
    end else if ((((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == 
    ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd10)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd6)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd5)))) begin
        ap_phi_mux_dime_out_local_phi_fu_313_p34 = 2'd0;
    end else begin
        ap_phi_mux_dime_out_local_phi_fu_313_p34 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd8)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd6)))) begin
        ap_phi_mux_nickel_out_local_phi_fu_256_p34 = 1'd1;
    end else if ((((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1)) | ((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == 
    ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd10)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd9)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd7)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd5)))) begin
        ap_phi_mux_nickel_out_local_phi_fu_256_p34 = 1'd0;
    end else begin
        ap_phi_mux_nickel_out_local_phi_fu_256_p34 = 'bx;
    end
end

always @ (*) begin
    if (((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd5;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd4;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd3;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd2;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd1;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd0))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = zext_ln41_fu_487_p1;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd1))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = zext_ln63_fu_466_p1;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd2))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = zext_ln85_fu_445_p1;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd3))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = zext_ln107_fu_424_p1;
    end else if (((nickel_in_read_read_fu_120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd4))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = zext_ln129_fu_403_p1;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd9)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd8)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd7)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd6)) | ((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd5)))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 32'd10;
    end else if (((1'b1 == ap_CS_fsm_state1) & (s_next_load_fu_367_p1 == 32'd10))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = select_ln202_fu_378_p3;
    end else if ((~(s_next_load_fu_367_p1 == 32'd10) & ~(s_next_load_fu_367_p1 == 32'd9) & ~(s_next_load_fu_367_p1 == 32'd8) & ~(s_next_load_fu_367_p1 == 32'd7) & ~(s_next_load_fu_367_p1 == 32'd6) & ~(s_next_load_fu_367_p1 == 32'd5) & ~(s_next_load_fu_367_p1 == 32'd4) & ~(s_next_load_fu_367_p1 == 32'd3) & ~(s_next_load_fu_367_p1 == 32'd2) & ~(s_next_load_fu_367_p1 == 32'd1) & ~(s_next_load_fu_367_p1 == 32'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = s;
    end else begin
        ap_phi_mux_s_next_1_phi_fu_150_p34 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign candy_out = ap_phi_mux_candy_out_local_phi_fu_199_p34;

assign dime_out = ap_phi_mux_dime_out_local_phi_fu_313_p34;

assign nickel_in_read_read_fu_120_p2 = nickel_in;

assign nickel_out = ap_phi_mux_nickel_out_local_phi_fu_256_p34;

assign or_ln41_fu_372_p2 = (quarter_in | dime_in);

assign s_next_load_fu_367_p1 = s;

assign select_ln107_1_fu_408_p3 = ((dime_in[0:0] == 1'b1) ? 4'd5 : 4'd8);

assign select_ln107_fu_416_p3 = ((or_ln41_fu_372_p2[0:0] == 1'b1) ? select_ln107_1_fu_408_p3 : 4'd3);

assign select_ln129_1_fu_387_p3 = ((dime_in[0:0] == 1'b1) ? 4'd6 : 4'd9);

assign select_ln129_fu_395_p3 = ((or_ln41_fu_372_p2[0:0] == 1'b1) ? select_ln129_1_fu_387_p3 : 4'd4);

assign select_ln202_fu_378_p3 = ((thanks_in[0:0] == 1'b1) ? 32'd0 : 32'd10);

assign select_ln41_1_fu_471_p3 = ((dime_in[0:0] == 1'b1) ? 3'd2 : 3'd5);

assign select_ln41_fu_479_p3 = ((or_ln41_fu_372_p2[0:0] == 1'b1) ? select_ln41_1_fu_471_p3 : 3'd0);

assign select_ln63_1_fu_450_p3 = ((dime_in[0:0] == 1'b1) ? 3'd3 : 3'd6);

assign select_ln63_fu_458_p3 = ((or_ln41_fu_372_p2[0:0] == 1'b1) ? select_ln63_1_fu_450_p3 : 3'd1);

assign select_ln85_1_fu_429_p3 = ((dime_in[0:0] == 1'b1) ? 3'd4 : 3'd7);

assign select_ln85_fu_437_p3 = ((or_ln41_fu_372_p2[0:0] == 1'b1) ? select_ln85_1_fu_429_p3 : 3'd2);

assign zext_ln107_fu_424_p1 = select_ln107_fu_416_p3;

assign zext_ln129_fu_403_p1 = select_ln129_fu_395_p3;

assign zext_ln41_fu_487_p1 = select_ln41_fu_479_p3;

assign zext_ln63_fu_466_p1 = select_ln63_fu_458_p3;

assign zext_ln85_fu_445_p1 = select_ln85_fu_437_p3;

endmodule //vending_machine
