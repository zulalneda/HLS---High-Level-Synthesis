-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vending_machine is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    nickel_in : IN STD_LOGIC_VECTOR (0 downto 0);
    dime_in : IN STD_LOGIC_VECTOR (0 downto 0);
    quarter_in : IN STD_LOGIC_VECTOR (0 downto 0);
    thanks_in : IN STD_LOGIC_VECTOR (0 downto 0);
    candy_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    nickel_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    dime_out : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of vending_machine is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "vending_machine_vending_machine,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.206214,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=33,HLS_SYN_LUT=142,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

    signal s : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal s_next_load_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_next_1_phi_fu_150_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal select_ln202_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln129_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal nickel_in_read_read_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln107_fu_424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln85_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln63_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln41_fu_487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_candy_out_local_phi_fu_199_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_nickel_out_local_phi_fu_256_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_dime_out_local_phi_fu_313_p34 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln41_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_1_fu_387_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln129_fu_395_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln107_1_fu_408_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln107_fu_416_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln85_1_fu_429_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln85_fu_437_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_1_fu_450_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_fu_458_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln41_1_fu_471_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln41_fu_479_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                s <= ap_phi_mux_s_next_1_phi_fu_150_p34;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;

    ap_phi_mux_candy_out_local_phi_fu_199_p34_assign_proc : process(s_next_load_fu_367_p1, ap_CS_fsm_state1, nickel_in_read_read_fu_120_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_9)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_8)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_5)))) then 
            ap_phi_mux_candy_out_local_phi_fu_199_p34 <= ap_const_lv1_1;
        elsif ((((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 
    = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_A)))) then 
            ap_phi_mux_candy_out_local_phi_fu_199_p34 <= ap_const_lv1_0;
        else 
            ap_phi_mux_candy_out_local_phi_fu_199_p34 <= "X";
        end if; 
    end process;


    ap_phi_mux_dime_out_local_phi_fu_313_p34_assign_proc : process(s_next_load_fu_367_p1, ap_CS_fsm_state1, nickel_in_read_read_fu_120_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_9))) then 
            ap_phi_mux_dime_out_local_phi_fu_313_p34 <= ap_const_lv2_3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_8)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_7)))) then 
            ap_phi_mux_dime_out_local_phi_fu_313_p34 <= ap_const_lv2_1;
        elsif ((((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 
    = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_A)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_5)))) then 
            ap_phi_mux_dime_out_local_phi_fu_313_p34 <= ap_const_lv2_0;
        else 
            ap_phi_mux_dime_out_local_phi_fu_313_p34 <= "XX";
        end if; 
    end process;


    ap_phi_mux_nickel_out_local_phi_fu_256_p34_assign_proc : process(s_next_load_fu_367_p1, ap_CS_fsm_state1, nickel_in_read_read_fu_120_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_8)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_6)))) then 
            ap_phi_mux_nickel_out_local_phi_fu_256_p34 <= ap_const_lv1_1;
        elsif ((((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3)) or ((nickel_in_read_read_fu_120_p2 
    = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1)) or ((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_A)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_9)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_5)))) then 
            ap_phi_mux_nickel_out_local_phi_fu_256_p34 <= ap_const_lv1_0;
        else 
            ap_phi_mux_nickel_out_local_phi_fu_256_p34 <= "X";
        end if; 
    end process;


    ap_phi_mux_s_next_1_phi_fu_150_p34_assign_proc : process(s, s_next_load_fu_367_p1, ap_CS_fsm_state1, select_ln202_fu_378_p3, zext_ln129_fu_403_p1, nickel_in_read_read_fu_120_p2, zext_ln107_fu_424_p1, zext_ln85_fu_445_p1, zext_ln63_fu_466_p1, zext_ln41_fu_487_p1)
    begin
        if (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_5;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_4;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_3;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_2;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_1;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_0))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= zext_ln41_fu_487_p1;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_1))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= zext_ln63_fu_466_p1;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_2))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= zext_ln85_fu_445_p1;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_3))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= zext_ln107_fu_424_p1;
        elsif (((nickel_in_read_read_fu_120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_4))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= zext_ln129_fu_403_p1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_9)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_8)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_5)))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= ap_const_lv32_A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (s_next_load_fu_367_p1 = ap_const_lv32_A))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= select_ln202_fu_378_p3;
        elsif ((not((s_next_load_fu_367_p1 = ap_const_lv32_A)) and not((s_next_load_fu_367_p1 = ap_const_lv32_9)) and not((s_next_load_fu_367_p1 = ap_const_lv32_8)) and not((s_next_load_fu_367_p1 = ap_const_lv32_7)) and not((s_next_load_fu_367_p1 = ap_const_lv32_6)) and not((s_next_load_fu_367_p1 = ap_const_lv32_5)) and not((s_next_load_fu_367_p1 = ap_const_lv32_4)) and not((s_next_load_fu_367_p1 = ap_const_lv32_3)) and not((s_next_load_fu_367_p1 = ap_const_lv32_2)) and not((s_next_load_fu_367_p1 = ap_const_lv32_1)) and not((s_next_load_fu_367_p1 = ap_const_lv32_0)) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= s;
        else 
            ap_phi_mux_s_next_1_phi_fu_150_p34 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    candy_out <= ap_phi_mux_candy_out_local_phi_fu_199_p34;
    dime_out <= ap_phi_mux_dime_out_local_phi_fu_313_p34;
    nickel_in_read_read_fu_120_p2 <= nickel_in;
    nickel_out <= ap_phi_mux_nickel_out_local_phi_fu_256_p34;
    or_ln41_fu_372_p2 <= (quarter_in or dime_in);
    s_next_load_fu_367_p1 <= s;
    select_ln107_1_fu_408_p3 <= 
        ap_const_lv4_5 when (dime_in(0) = '1') else 
        ap_const_lv4_8;
    select_ln107_fu_416_p3 <= 
        select_ln107_1_fu_408_p3 when (or_ln41_fu_372_p2(0) = '1') else 
        ap_const_lv4_3;
    select_ln129_1_fu_387_p3 <= 
        ap_const_lv4_6 when (dime_in(0) = '1') else 
        ap_const_lv4_9;
    select_ln129_fu_395_p3 <= 
        select_ln129_1_fu_387_p3 when (or_ln41_fu_372_p2(0) = '1') else 
        ap_const_lv4_4;
    select_ln202_fu_378_p3 <= 
        ap_const_lv32_0 when (thanks_in(0) = '1') else 
        ap_const_lv32_A;
    select_ln41_1_fu_471_p3 <= 
        ap_const_lv3_2 when (dime_in(0) = '1') else 
        ap_const_lv3_5;
    select_ln41_fu_479_p3 <= 
        select_ln41_1_fu_471_p3 when (or_ln41_fu_372_p2(0) = '1') else 
        ap_const_lv3_0;
    select_ln63_1_fu_450_p3 <= 
        ap_const_lv3_3 when (dime_in(0) = '1') else 
        ap_const_lv3_6;
    select_ln63_fu_458_p3 <= 
        select_ln63_1_fu_450_p3 when (or_ln41_fu_372_p2(0) = '1') else 
        ap_const_lv3_1;
    select_ln85_1_fu_429_p3 <= 
        ap_const_lv3_4 when (dime_in(0) = '1') else 
        ap_const_lv3_7;
    select_ln85_fu_437_p3 <= 
        select_ln85_1_fu_429_p3 when (or_ln41_fu_372_p2(0) = '1') else 
        ap_const_lv3_2;
    zext_ln107_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln107_fu_416_p3),32));
    zext_ln129_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln129_fu_395_p3),32));
    zext_ln41_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_fu_479_p3),32));
    zext_ln63_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_fu_458_p3),32));
    zext_ln85_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln85_fu_437_p3),32));
end behav;
